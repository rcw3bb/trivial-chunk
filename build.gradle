buildscript {
    configurations.classpath {
        resolutionStrategy.activateDependencyLocking()
    }
}

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'jacoco'
    id 'pmd'

    alias(libs.plugins.publish.plugin)
    alias(libs.plugins.moduleplugin)
    alias(libs.plugins.snyk)

}

group 'xyz.ronella.casual'
version VERSION

configurations {
    mockitoAgent
}

ext {
    shouldSnykScan = Boolean.valueOf(snykScan)
    logger.lifecycle("Snyk Scan: ${shouldSnykScan}")
}

pmd {
    consoleOutput = true
    toolVersion = "7.7.0"
    rulesMinimumPriority = 5
    ruleSetFiles = files('config/pmd/custom.xml')
    ruleSets = []
}

snyk {
    arguments = '--all-sub-projects'
    severity = 'low'
    api = "${hasProperty('snykToken') ? getProperty('snykToken') : System.getenv('SNYK_TOKEN')}"
    autoDownload = true
    autoUpdate = true
}

repositories {
    mavenCentral()
}

java {
    targetCompatibility = JavaVersion.VERSION_21
    sourceCompatibility = JavaVersion.VERSION_21
    withJavadocJar()
    withSourcesJar()
}

task testsJar(type: Jar, dependsOn: [testClasses]) {
    archiveClassifier.set('tests')
    from sourceSets.test.output
}

tasks.getByName('snyk-check-binary') {
    onlyIf { shouldSnykScan }
}

tasks.getByName('snyk-test') {
    onlyIf { shouldSnykScan }
}

tasks.getByName('snyk-monitor') {
    onlyIf { shouldSnykScan }
}

jar {
    manifest {
        attributes 'Implementation-Title': "${project.name}",
                'Implementation-Version': "${version}"
    }
    dependsOn test
    dependsOn('snyk-monitor')
    finalizedBy(javadocJar, sourcesJar, testsJar)
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact testsJar
            pom {
                name = 'Trivial Chunk'
                description = 'A library of trivial codes.'
                url = 'https://github.com/rcw3bb/trivial-chunk'
                properties = [
                        "inceptionYear": '2019'
                ]
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://github.com/rcw3bb/trivial-chunk/blob/master/LICENSE.md'
                    }
                }
                developers {
                    developer {
                        id = 'rcw3bb'
                        name = 'Ronaldo Webb'
                        email = 'ronaldo.c.webb@gmail.com'
                    }
                }
                scm {
                    connection = 'https://github.com/rcw3bb/trivial-chunk.git'
                    developerConnection = 'https://github.com/rcw3bb/trivial-chunk.git'
                    url = 'https://github.com/rcw3bb/trivial-chunk'
                }
            }
        }
    }
}

pmdTest.enabled = false

jacocoTestReport {
    dependsOn test
}

signing {
    sign publishing.publications.mavenJava
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

nexusPublishing {
    repositories {
        sonatype {
            nexusUrl = uri('https://oss.sonatype.org/service/local/')
            snapshotRepositoryUrl = uri('https://oss.sonatype.org/content/repositories/snapshots/')
            stagingProfileId = "142f3cca5418da"
        }
    }
}

dependencyLocking {
    lockAllConfigurations()
}

dependencies {
    mockitoAgent(testLibs.mockito.core) {
        transitive = false
    }

    testImplementation testLibs.bundles.unit.test
}

test {
    jvmArgs("-javaagent:${configurations.mockitoAgent.asPath}")
    useJUnitPlatform()
    dependsOn pmdMain
    finalizedBy jacocoTestReport
    finalizedBy('snyk-test')
    finalizedBy javadoc
}

closeAndReleaseSonatypeStagingRepository.dependsOn('snyk-monitor', 'publishToSonatype')